<%-- 
    Document   : register
    Created on : Oct 10, 2025, 12:01:11 PM
    Author     : admin
--%>

<%@page contentType="text/html" pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Register Account</title>
  <link rel="stylesheet" href="resources/css/style.css">
</head>
<body>
  <div class="container">
    <h2>Register Account</h2>

    <form>
      <div class="form-group">
        <div class="form-control">
          <label>Full name</label>
          <input type="text" placeholder="John Doe">
        </div>
        <div class="form-control">
          <label>Email</label>
          <input type="email" placeholder="example@gmail.com">
        </div>
      </div>

      <div class="form-group">
        <div class="form-control">
          <label>Contact Address</label>
          <input type="text" placeholder="">
          <button type="button" class="btn-add">Add address</button>
        </div>
        <div class="form-control">
          <label>Phone Number</label>
          <input type="tel" placeholder="+84912345678">
        </div>
      </div>

      <div class="form-group">
        <div class="form-control">
          <label>Password</label>
          <input type="password" id="password">
          <div class="password-info">
            Must have at least 8 characters, 1 number, 1 uppercase letter, no special characters.
          </div>
        </div>
        <div class="form-control">
          <label>Confirm Password</label>
          <input type="password">
        </div>
      </div>

      <div class="strength-bar"></div>
      <div class="strength-text">
        At least 8 characters ‚Äì missing number or uppercase ‚Äì no special characters
      </div>

      <button type="submit">Create Staff</button>

      <div class="login-text">
        You have an account? <a href="#">Login</a>
      </div>
    </form>
  </div>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('registerForm');
    const fullnameInput = document.getElementById('fullname');
    const emailInput = document.getElementById('email');
    const phoneInput = document.getElementById('phone');
    const addressInput = document.getElementById('address');
    const passwordInput = document.getElementById('password');
    const confirmPasswordInput = document.getElementById('confirmPassword');
    const strengthBar = document.getElementById('strengthBar');
    const strengthText = document.getElementById('strengthText');
    const btnAddAddress = document.getElementById('btnAddAddress');
    const secondaryAddressContainer = document.getElementById('secondaryAddressContainer');
    let hasSecondaryAddress = false; // Bi·∫øn theo d√µi tr·∫°ng th√°i

    // --- PRIVATE HELPER FUNCTIONS ---

    /**
     * Hi·ªÉn th·ªã th√¥ng b√°o l·ªói cho m·ªôt tr∆∞·ªùng nh·∫≠p.
     * @param {HTMLElement} input - Tr∆∞·ªùng input b·ªã l·ªói.
     * @param {string} message - Th√¥ng b√°o l·ªói.
     */
    function displayError(input, message) {
        const control = input.closest('.form-control');
        const errorElement = document.getElementById('error-' + input.id);
        
        control.classList.add('error');
        if (errorElement) {
            errorElement.textContent = message;
            errorElement.style.display = 'block';
        }
    }

    /**
     * X√≥a th√¥ng b√°o l·ªói cho m·ªôt tr∆∞·ªùng nh·∫≠p.
     * @param {HTMLElement} input - Tr∆∞·ªùng input c·∫ßn x√≥a l·ªói.
     */
    function clearError(input) {
        const control = input.closest('.form-control');
        const errorElement = document.getElementById('error-' + input.id);

        control.classList.remove('error');
        if (errorElement) {
            errorElement.textContent = '';
            errorElement.style.display = 'none';
        }
    }

    /**
     * Ki·ªÉm tra tr∆∞·ªùng nh·∫≠p li·ªáu b·∫Øt bu·ªôc.
     * @param {HTMLElement} input - Tr∆∞·ªùng input.
     * @param {string} message - Th√¥ng b√°o n·∫øu tr·ªëng.
     * @returns {boolean} - true n·∫øu kh√¥ng tr·ªëng.
     */
    function checkRequired(input, message) {
        if (input.value.trim() === '') {
            displayError(input, message);
            return false;
        }
        clearError(input);
        return true;
    }

    /**
     * Ki·ªÉm tra ƒë·ªãnh d·∫°ng Email.
     */
    function validateEmail() {
        const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,6}$/;
        if (!checkRequired(emailInput, 'Vui l√≤ng nh·∫≠p Email.')) return false;
        
        if (!emailPattern.test(emailInput.value.trim())) {
            displayError(emailInput, 'Email kh√¥ng ƒë√∫ng ƒë·ªãnh d·∫°ng.');
            return false;
        }
        clearError(emailInput);
        return true;
    }

    /**
     * Ki·ªÉm tra ƒë·ªãnh d·∫°ng S·ªë ƒëi·ªán tho·∫°i.
     */
    function validatePhone() {
        // ƒê·ªãnh d·∫°ng SƒêT: 10-15 ch·ªØ s·ªë, c√≥ th·ªÉ c√≥ + ·ªü ƒë·∫ßu
        const phonePattern = /^\+?[0-9]{10,15}$/;
        if (!checkRequired(phoneInput, 'Vui l√≤ng nh·∫≠p S·ªë ƒëi·ªán tho·∫°i.')) return false;

        if (!phonePattern.test(phoneInput.value.trim())) {
            displayError(phoneInput, 'S·ªë ƒëi·ªán tho·∫°i kh√¥ng h·ª£p l·ªá (v√≠ d·ª•: +849...).');
            return false;
        }
        clearError(phoneInput);
        return true;
    }

    /**
     * Ki·ªÉm tra ƒë·ªô m·∫°nh v√† t√≠nh h·ª£p l·ªá c·ªßa M·∫≠t kh·∫©u.
     */
    function validatePassword() {
        const password = passwordInput.value;
        // Y√™u c·∫ßu: √≠t nh·∫•t 8 k√Ω t·ª±, 1 s·ªë, 1 ch·ªØ hoa, KH√îNG c√≥ k√Ω t·ª± ƒë·∫∑c bi·ªát.
        const minLength = password.length >= 8;
        const hasNumber = /[0-9]/.test(password);
        const hasUppercase = /[A-Z]/.test(password);
        // Ki·ªÉm tra KH√îNG c√≥ k√Ω t·ª± ƒë·∫∑c bi·ªát (ch·ªâ cho ph√©p ch·ªØ, s·ªë)
        const noSpecialChars = /^[a-zA-Z0-9]+$/.test(password);
        
        // C·∫≠p nh·∫≠t thanh ƒë·ªô m·∫°nh (strength bar)
        updatePasswordStrength(minLength, hasNumber, hasUppercase, noSpecialChars);

        if (!checkRequired(passwordInput, 'Vui l√≤ng nh·∫≠p M·∫≠t kh·∫©u.')) return false;

        if (!minLength) {
            displayError(passwordInput, 'M·∫≠t kh·∫©u ph·∫£i c√≥ √≠t nh·∫•t 8 k√Ω t·ª±.');
            return false;
        }
        if (!hasNumber) {
            displayError(passwordInput, 'M·∫≠t kh·∫©u ph·∫£i c√≥ √≠t nh·∫•t 1 ch·ªØ s·ªë.');
            return false;
        }
        if (!hasUppercase) {
            displayError(passwordInput, 'M·∫≠t kh·∫©u ph·∫£i c√≥ √≠t nh·∫•t 1 ch·ªØ hoa.');
            return false;
        }
        if (!noSpecialChars) {
             displayError(passwordInput, 'M·∫≠t kh·∫©u kh√¥ng ƒë∆∞·ª£c ch·ª©a k√Ω t·ª± ƒë·∫∑c bi·ªát (ch·ªâ ch·∫•p nh·∫≠n ch·ªØ v√† s·ªë).');
            return false;
        }

        clearError(passwordInput);
        return true;
    }

    /**
     * C·∫≠p nh·∫≠t giao di·ªán thanh ƒë·ªô m·∫°nh m·∫≠t kh·∫©u.
     */
    function updatePasswordStrength(minLength, hasNumber, hasUppercase, noSpecialChars) {
        let strength = 0;
        let message = '';
        
        if (minLength) strength += 1;
        if (hasNumber) strength += 1;
        if (hasUppercase) strength += 1;
        if (noSpecialChars) strength += 1;

        // C·∫≠p nh·∫≠t thanh bar (v√≠ d·ª•: d√πng CSS ƒë·ªÉ ƒë·ªïi m√†u/ƒë·ªô r·ªông)
        strengthBar.style.width = (strength / 4) * 100 + '%';

        if (strength === 4) {
            message = 'M·∫≠t kh·∫©u m·∫°nh üí™';
            strengthBar.style.backgroundColor = 'green';
        } else if (strength >= 2) {
            message = 'M·∫≠t kh·∫©u trung b√¨nh üü°';
            strengthBar.style.backgroundColor = 'orange';
        } else if (strength > 0) {
            message = 'M·∫≠t kh·∫©u y·∫øu üî¥';
            strengthBar.style.backgroundColor = 'red';
        } else {
            message = 'At least 8 characters ‚Äì missing number or uppercase ‚Äì no special characters';
            strengthBar.style.backgroundColor = 'grey';
            strengthBar.style.width = '0%';
        }
        
        strengthText.textContent = message;
    }


    /**
     * Ki·ªÉm tra X√°c nh·∫≠n M·∫≠t kh·∫©u.
     */
    function validateConfirmPassword() {
        if (!checkRequired(confirmPasswordInput, 'Vui l√≤ng x√°c nh·∫≠n M·∫≠t kh·∫©u.')) return false;

        if (passwordInput.value !== confirmPasswordInput.value) {
            displayError(confirmPasswordInput, 'M·∫≠t kh·∫©u x√°c nh·∫≠n kh√¥ng kh·ªõp.');
            return false;
        }
        clearError(confirmPasswordInput);
        return true;
    }
    
    /**
     * X·ª≠ l√Ω th√™m/x√≥a tr∆∞·ªùng ƒê·ªãa ch·ªâ ph·ª•.
     */
    function toggleSecondaryAddress(event) {
        if (!hasSecondaryAddress) {
            // Th√™m tr∆∞·ªùng ƒë·ªãa ch·ªâ ph·ª•
            const newAddressHTML = `
                <div class="form-control" id="secondaryAddressControl">
                    <label>Secondary Address</label>
                    <input type="text" id="sec_address" name="sec_address" placeholder="Secondary Address (Optional)">
                    <button type="button" class="btn-remove" id="btnRemoveAddress" style="margin-top: 5px;">Remove address</button>
                </div>
            `;
            secondaryAddressContainer.innerHTML = newAddressHTML;
            
            // C·∫≠p nh·∫≠t n√∫t
            btnAddAddress.style.display = 'none';
            hasSecondaryAddress = true;
            
            // Th√™m s·ª± ki·ªán cho n√∫t x√≥a
            document.getElementById('btnRemoveAddress').addEventListener('click', toggleSecondaryAddress);
            
        } else {
            // X√≥a tr∆∞·ªùng ƒë·ªãa ch·ªâ ph·ª•
            secondaryAddressContainer.innerHTML = '';
            btnAddAddress.style.display = 'block';
            hasSecondaryAddress = false;
        }
    }

    // --- MAIN VALIDATION LOGIC ---

    /**
     * Ch·∫°y validation cho t·∫•t c·∫£ c√°c tr∆∞·ªùng.
     * @returns {boolean} - true n·∫øu form h·ª£p l·ªá.
     */
    function validateForm() {
        // Ch·∫°y t·∫•t c·∫£ c√°c h√†m validation v√† d√πng && ƒë·ªÉ ki·ªÉm tra k·∫øt qu·∫£ cu·ªëi c√πng
        // Ch·∫°y l·∫ßn l∆∞·ª£t ƒë·ªÉ t·∫•t c·∫£ l·ªói ƒë·ªÅu ƒë∆∞·ª£c hi·ªÉn th·ªã
        const isFullnameValid = checkRequired(fullnameInput, 'Vui l√≤ng nh·∫≠p H·ªç v√† T√™n.');
        const isEmailValid = validateEmail();
        const isPhoneValid = validatePhone();
        const isAddressValid = checkRequired(addressInput, 'Vui l√≤ng nh·∫≠p ƒê·ªãa ch·ªâ li√™n h·ªá.');
        const isPasswordValid = validatePassword();
        const isConfirmPasswordValid = validateConfirmPassword();
        
        // Tr·∫£ v·ªÅ true ch·ªâ khi T·∫§T C·∫¢ c√°c tr∆∞·ªùng ƒë·ªÅu h·ª£p l·ªá
        return isFullnameValid && isEmailValid && isPhoneValid && isAddressValid && isPasswordValid && isConfirmPasswordValid;
    }

    // --- EVENT LISTENERS ---

    // 1. X·ª≠ l√Ω s·ª± ki·ªán SUBMIT FORM
    form.addEventListener('submit', function(e) {
        e.preventDefault(); // NgƒÉn ch·∫∑n submit form m·∫∑c ƒë·ªãnh

        if (validateForm()) {
            console.log('Form is valid. Submitting to server...');
            // *** Th·ª±c hi·ªán AJAX ho·∫∑c submit form T·∫†I ƒê√ÇY ***
            // V√≠ d·ª•: form.submit(); // N·∫øu b·∫°n mu·ªën d√πng form submit truy·ªÅn th·ªëng
            alert('ƒêƒÉng k√Ω th√†nh c√¥ng (ch·ªù x·ª≠ l√Ω Server)!'); 
        } else {
            alert('Vui l√≤ng ki·ªÉm tra l·∫°i c√°c tr∆∞·ªùng b·ªã l·ªói.');
        }
    });

    // 2. X·ª≠ l√Ω s·ª± ki·ªán nh·∫≠p li·ªáu cho M·∫≠t kh·∫©u (ƒë·ªÉ c·∫≠p nh·∫≠t thanh ƒë·ªô m·∫°nh)
    passwordInput.addEventListener('input', validatePassword);

    // 3. X·ª≠ l√Ω s·ª± ki·ªán n√∫t Th√™m/X√≥a ƒê·ªãa ch·ªâ ph·ª•
    btnAddAddress.addEventListener('click', toggleSecondaryAddress);
    
    // 4. Validation t·ª©c th√¨ khi ng∆∞·ªùi d√πng r·ªùi kh·ªèi tr∆∞·ªùng (blur event)
    [fullnameInput, emailInput, phoneInput, addressInput, confirmPasswordInput].forEach(input => {
        input.addEventListener('blur', function() {
            switch(input.id) {
                case 'fullname': checkRequired(input, 'Vui l√≤ng nh·∫≠p H·ªç v√† T√™n.'); break;
                case 'email': validateEmail(); break;
                case 'phone': validatePhone(); break;
                case 'address': checkRequired(input, 'Vui l√≤ng nh·∫≠p ƒê·ªãa ch·ªâ li√™n h·ªá.'); break;
                case 'confirmPassword': validateConfirmPassword(); break;
                // Password ƒë∆∞·ª£c x·ª≠ l√Ω b·∫±ng 'input' event ƒë·ªÉ c·∫≠p nh·∫≠t strength bar
            }
        });
    });

});
    </script>
</body>
</html>
